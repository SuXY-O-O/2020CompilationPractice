CONSTTK const
INTTK int
IDENFR aa
ASSIGN =
MINU -
INTCON 10
SEMICN ;
CONSTTK const
CHARTK char
IDENFR cc
ASSIGN =
CHARCON +
COMMA ,
IDENFR ccc
ASSIGN =
CHARCON *
SEMICN ;
INTTK int
IDENFR bb
ASSIGN =
INTCON 11
SEMICN ;
INTTK int
IDENFR bbb
ASSIGN =
INTCON 111
SEMICN ;
INTTK int
IDENFR i
LBRACK [
INTCON 10
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
SEMICN ;
INTTK int
IDENFR ii
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
LBRACE {
MINU -
INTCON 1
COMMA ,
PLUS +
INTCON 2
RBRACE }
SEMICN ;
INTTK int
IDENFR iii
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 1
RBRACE }
RBRACE }
SEMICN ;
INTTK int
IDENFR iiii
LBRACK [
INTCON 1
RBRACK ]
SEMICN ;
INTTK int
IDENFR iiiii
SEMICN ;
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR a_Chang2
ASSIGN =
INTCON 9
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373187
RPARENT )
SEMICN ;
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 99
PLUS +
INTCON 10
DIV /
INTCON 10
SEMICN ;
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
ASSIGN =
INTCON 99
PLUS +
INTCON 10
MULT *
INTCON 10
SEMICN ;
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
ASSIGN =
PLUS +
INTCON 99
MINU -
INTCON 10
DIV /
INTCON 10
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR bb
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
PLUS +
IDENFR bb
DIV /
INTCON 10
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
LPARENT (
IDENFR i
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
MINU -
IDENFR bb
RPARENT )
DIV /
IDENFR bbb
PLUS +
IDENFR ii
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
IDENFR ii
LBRACK [
INTCON 1
RBRACK ]
ASSIGN =
INTCON 10
SEMICN ;
IDENFR bbb
ASSIGN =
INTCON 10
SEMICN ;
IFTK if
LPARENT (
IDENFR ii
LBRACK [
INTCON 1
RBRACK ]
GEQ >=
IDENFR bbb
RPARENT )
IDENFR bb
ASSIGN =
IDENFR bb
PLUS +
INTCON 1
SEMICN ;
IFTK if
LPARENT (
IDENFR ii
LBRACK [
INTCON 1
RBRACK ]
LEQ <=
IDENFR bbb
RPARENT )
IDENFR bb
ASSIGN =
IDENFR bb
PLUS +
INTCON 1
SEMICN ;
ELSETK else
IDENFR bb
ASSIGN =
INTCON 0
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR bb
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR cc
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR ccc
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR iii
LBRACK [
INTCON 0
RBRACK ]
LBRACK [
INTCON 0
RBRACK ]
RPARENT )
SEMICN ;
RETURNTK return
SEMICN ;
RBRACE }
