CONSTTK const
INTTK int
IDENFR N
ASSIGN =
INTCON 10
SEMICN ;
INTTK int
IDENFR g
LBRACK [
INTCON 10
RBRACK ]
LBRACK [
INTCON 10
RBRACK ]
ASSIGN =
LBRACE {
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
COMMA ,
LBRACE {
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
COMMA ,
INTCON 0
RBRACE }
RBRACE }
SEMICN ;
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR j
ASSIGN =
MINU -
INTCON 1
SEMICN ;
INTTK int
IDENFR cnt
ASSIGN =
INTCON 0
SEMICN ;
INTTK int
IDENFR NN
ASSIGN =
INTCON 100
SEMICN ;
INTTK int
IDENFR ok
SEMICN ;
PRINTFTK printf
LPARENT (
STRCON 18373806
RPARENT )
SEMICN ;
WHILETK while
LPARENT (
IDENFR cnt
LSS <
IDENFR NN
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR j
PLUS +
INTCON 1
GEQ >=
IDENFR N
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
PLUS +
INTCON 1
RBRACK ]
NEQ !=
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
IDENFR j
PLUS +
INTCON 1
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
PLUS +
INTCON 1
SEMICN ;
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR cnt
SEMICN ;
RBRACE }
RBRACE }
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
PLUS +
INTCON 1
GEQ >=
IDENFR N
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR g
LBRACK [
IDENFR i
PLUS +
INTCON 1
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
NEQ !=
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
PLUS +
INTCON 1
SEMICN ;
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR cnt
SEMICN ;
RBRACE }
RBRACE }
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR j
MINU -
INTCON 1
LSS <
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
MINU -
INTCON 1
RBRACK ]
NEQ !=
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR j
ASSIGN =
IDENFR j
MINU -
INTCON 1
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
PLUS +
INTCON 1
SEMICN ;
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR cnt
SEMICN ;
RBRACE }
RBRACE }
IDENFR ok
ASSIGN =
INTCON 0
SEMICN ;
WHILETK while
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR i
MINU -
INTCON 1
LSS <
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
ELSETK else
IFTK if
LPARENT (
IDENFR g
LBRACK [
IDENFR i
MINU -
INTCON 1
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
NEQ !=
INTCON 0
RPARENT )
LBRACE {
IDENFR ok
ASSIGN =
INTCON 1
SEMICN ;
RBRACE }
IFTK if
LPARENT (
IDENFR ok
EQL ==
INTCON 0
RPARENT )
LBRACE {
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 1
SEMICN ;
IDENFR cnt
ASSIGN =
IDENFR cnt
PLUS +
INTCON 1
SEMICN ;
IDENFR g
LBRACK [
IDENFR i
RBRACK ]
LBRACK [
IDENFR j
RBRACK ]
ASSIGN =
IDENFR cnt
SEMICN ;
RBRACE }
RBRACE }
RBRACE }
PRINTFTK printf
LPARENT (
STRCON g12, g63, g24, g46, g75, g87, g98, g51
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 1
RBRACK ]
LBRACK [
INTCON 2
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 6
RBRACK ]
LBRACK [
INTCON 3
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 2
RBRACK ]
LBRACK [
INTCON 4
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 4
RBRACK ]
LBRACK [
INTCON 6
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 7
RBRACK ]
LBRACK [
INTCON 5
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 8
RBRACK ]
LBRACK [
INTCON 7
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 9
RBRACK ]
LBRACK [
INTCON 8
RBRACK ]
RPARENT )
SEMICN ;
PRINTFTK printf
LPARENT (
IDENFR g
LBRACK [
INTCON 5
RBRACK ]
LBRACK [
INTCON 1
RBRACK ]
RPARENT )
SEMICN ;
RBRACE }
