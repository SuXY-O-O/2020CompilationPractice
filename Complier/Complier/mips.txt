.data
a : .space 4000
seed : .space 12
staticvalue : .space 4

.text
li $6, 19971231
li $5, 0
la $4, seed($5)
sw $6, 0($4)
li $8, 19981013
li $7, 4
la $4, seed($7)
sw $8, 0($4)
li $10, 1000000007
li $9, 8
la $4, seed($9)
sw $10, 0($4)
li $11, 0
sw $11, staticvalue
jal func_main_begin
li $v0, 10
syscall

func_myscanf_begin:
addi $29, $29, -4
sw $5, 0($29)
addi $29, $29, -4
sw $6, 0($29)
addi $29, $29, -4
sw $31, 0($29)
addi $29, $29, -4

li $v0, 5
syscall
move $5, $2
sw $5, 0($29)
lw $6, 0($29)
move $2, $6
j func_myscanf_end

func_myscanf_end:
addi $29, $29, 4
lw $31, 0($29)
addi $29, $29, 4
lw $6, 0($29)
addi $29, $29, 4
lw $5, 0($29)
addi $29, $29, 4
jr $ra


func_myprintf_begin:
addi $29, $29, -4
sw $4, 0($29)
addi $29, $29, -4
sw $31, 0($29)
addi $29, $29, 0

lw $4, 0($30)
li $v0, 1
syscall
li $4, 10
li $v0, 11
syscall
j func_myprintf_end

func_myprintf_end:
addi $29, $29, 0
lw $31, 0($29)
addi $29, $29, 4
lw $4, 0($29)
addi $29, $29, 4
jr $ra


func_set_begin:
addi $29, $29, -4
sw $5, 0($29)
addi $29, $29, -4
sw $6, 0($29)
addi $29, $29, -4
sw $7, 0($29)
addi $29, $29, -4
sw $8, 0($29)
addi $29, $29, -4
sw $9, 0($29)
addi $29, $29, -4
sw $10, 0($29)
addi $29, $29, -4
sw $11, 0($29)
addi $29, $29, -4
sw $12, 0($29)
addi $29, $29, -4
sw $13, 0($29)
addi $29, $29, -4
sw $14, 0($29)
addi $29, $29, -4
sw $15, 0($29)
addi $29, $29, -4
sw $16, 0($29)
addi $29, $29, -4
sw $17, 0($29)
addi $29, $29, -4
sw $18, 0($29)
addi $29, $29, -4
sw $19, 0($29)
addi $29, $29, -4
sw $20, 0($29)
addi $29, $29, -4
sw $21, 0($29)
addi $29, $29, -4
sw $22, 0($29)
addi $29, $29, -4
sw $23, 0($29)
addi $29, $29, -4
sw $24, 0($29)
addi $29, $29, -4
sw $25, 0($29)
addi $29, $29, -4
sw $31, 0($29)
addi $29, $29, -496

li $5, 10
sw $5, 124($29)
li $6, 0
sw $6, 128($29)
li $7, 0
mul $8, $7, 4
sw $8, 132($29)
li $9, 1
move $10, $9
lw $8, 132($29)
add $4, $29, $8
sw $10, 0($4)
li $11, 1
mul $12, $11, 4
sw $12, 136($29)
li $13, 0
mul $14, $13, 4
sw $14, 144($29)
lw $14, 144($29)
add $15, $29, $14
lw $15, 0($15)
mul $16, $15, 2
sw $16, 140($29)
lw $16, 140($29)
move $17, $16
lw $12, 136($29)
add $4, $29, $12
sw $17, 0($4)
li $18, 2
mul $19, $18, 4
sw $19, 148($29)
li $20, 1
mul $21, $20, 4
sw $21, 156($29)
lw $21, 156($29)
add $22, $29, $21
lw $22, 0($22)
mul $23, $22, 2
sw $23, 152($29)
lw $23, 152($29)
move $24, $23
lw $19, 148($29)
add $4, $29, $19
sw $24, 0($4)
li $25, 3
mul $5, $25, 4
sw $5, 160($29)
li $6, 2
mul $7, $6, 4
sw $7, 168($29)
lw $7, 168($29)
add $8, $29, $7
lw $8, 0($8)
mul $9, $8, 2
sw $9, 164($29)
lw $9, 164($29)
move $10, $9
lw $5, 160($29)
add $4, $29, $5
sw $10, 0($4)
li $11, 4
mul $12, $11, 4
sw $12, 172($29)
li $13, 3
mul $14, $13, 4
sw $14, 180($29)
lw $14, 180($29)
add $15, $29, $14
lw $15, 0($15)
mul $16, $15, 2
sw $16, 176($29)
lw $16, 176($29)
move $17, $16
lw $12, 172($29)
add $4, $29, $12
sw $17, 0($4)
li $18, 5
mul $19, $18, 4
sw $19, 184($29)
li $20, 4
mul $21, $20, 4
sw $21, 192($29)
lw $21, 192($29)
add $22, $29, $21
lw $22, 0($22)
mul $23, $22, 2
sw $23, 188($29)
lw $23, 188($29)
move $24, $23
lw $19, 184($29)
add $4, $29, $19
sw $24, 0($4)
li $25, 6
mul $5, $25, 4
sw $5, 196($29)
li $6, 5
mul $7, $6, 4
sw $7, 204($29)
lw $7, 204($29)
add $8, $29, $7
lw $8, 0($8)
mul $9, $8, 2
sw $9, 200($29)
lw $9, 200($29)
move $10, $9
lw $5, 196($29)
add $4, $29, $5
sw $10, 0($4)
li $11, 7
mul $12, $11, 4
sw $12, 208($29)
li $13, 6
mul $14, $13, 4
sw $14, 216($29)
lw $14, 216($29)
add $15, $29, $14
lw $15, 0($15)
mul $16, $15, 2
sw $16, 212($29)
lw $16, 212($29)
move $17, $16
lw $12, 208($29)
add $4, $29, $12
sw $17, 0($4)
li $18, 8
mul $19, $18, 4
sw $19, 220($29)
li $20, 7
mul $21, $20, 4
sw $21, 228($29)
lw $21, 228($29)
add $22, $29, $21
lw $22, 0($22)
mul $23, $22, 2
sw $23, 224($29)
lw $23, 224($29)
move $24, $23
lw $19, 220($29)
add $4, $29, $19
sw $24, 0($4)
li $25, 9
mul $5, $25, 4
sw $5, 232($29)
li $6, 8
mul $7, $6, 4
sw $7, 240($29)
lw $7, 240($29)
add $8, $29, $7
lw $8, 0($8)
mul $9, $8, 2
sw $9, 236($29)
lw $9, 236($29)
move $10, $9
lw $5, 232($29)
add $4, $29, $5
sw $10, 0($4)
li $11, 10
mul $12, $11, 4
sw $12, 244($29)
li $13, 9
mul $14, $13, 4
sw $14, 252($29)
lw $14, 252($29)
add $15, $29, $14
lw $15, 0($15)
mul $16, $15, 2
sw $16, 248($29)
lw $16, 248($29)
move $17, $16
lw $12, 244($29)
add $4, $29, $12
sw $17, 0($4)
while_0_begin:
lw $18, 124($29)
li $19, 30
bge $18, $19, while_0_end
lw $20, 124($29)
addi $21, $20, 1
sw $21, 256($29)
lw $21, 256($29)
move $22, $21
sw $22, 124($29)
lw $23, 124($29)
mul $24, $23, 4
sw $24, 260($29)
lw $25, 124($29)
subi $5, $25, 1
sw $5, 268($29)
lw $5, 268($29)
mul $6, $5, 4
sw $6, 272($29)
lw $6, 272($29)
add $7, $29, $6
lw $7, 0($7)
mul $8, $7, 2
sw $8, 264($29)
lw $8, 264($29)
move $9, $8
lw $24, 260($29)
add $4, $29, $24
sw $9, 0($4)
j while_0_begin
while_0_end:
if_0_begin:
lw $10, 0($30)
div $11, $10, 30
sw $11, 276($29)
lw $11, 276($29)
li $12, 1000
blt $11, $12, if_0_end
li $13, 0
move $2, $13
j func_set_end
if_0_end:
if_1_begin:
lw $14, 0($30)
div $15, $14, 30
sw $15, 284($29)
lw $15, 284($29)
mul $16, $15, 4
sw $16, 288($29)
lw $17, 0($30)
div $18, $17, 30
sw $18, 296($29)
lw $18, 296($29)
mul $18, $18, 30
sw $18, 296($29)
lw $19, 0($30)
lw $18, 296($29)
sub $20, $19, $18
sw $20, 292($29)
lw $20, 292($29)
mul $21, $20, 4
sw $21, 300($29)
lw $16, 288($29)
la $22, a($16)
lw $22, 0($22)
lw $21, 300($29)
add $23, $29, $21
lw $23, 0($23)
div $24, $22, $23
sw $24, 280($29)
lw $25, 0($30)
div $5, $25, 30
sw $5, 316($29)
lw $5, 316($29)
mul $6, $5, 4
sw $6, 320($29)
lw $7, 0($30)
div $8, $7, 30
sw $8, 328($29)
lw $8, 328($29)
mul $8, $8, 30
sw $8, 328($29)
lw $9, 0($30)
lw $8, 328($29)
sub $10, $9, $8
sw $10, 324($29)
lw $10, 324($29)
mul $11, $10, 4
sw $11, 332($29)
lw $6, 320($29)
la $12, a($6)
lw $12, 0($12)
lw $11, 332($29)
add $13, $29, $11
lw $13, 0($13)
div $14, $12, $13
sw $14, 312($29)
lw $14, 312($29)
div $15, $14, 2
sw $15, 308($29)
lw $15, 308($29)
mul $15, $15, 2
sw $15, 308($29)
lw $24, 280($29)
lw $15, 308($29)
sub $16, $24, $15
sw $16, 304($29)
lw $16, 304($29)
lw $17, 4($30)
beq $16, $17, if_1_end
if_2_begin:
lw $18, 0($30)
div $19, $18, 30
sw $19, 340($29)
lw $19, 340($29)
mul $20, $19, 4
sw $20, 344($29)
lw $21, 0($30)
div $22, $21, 30
sw $22, 352($29)
lw $22, 352($29)
mul $22, $22, 30
sw $22, 352($29)
lw $23, 0($30)
lw $22, 352($29)
sub $24, $23, $22
sw $24, 348($29)
lw $24, 348($29)
mul $25, $24, 4
sw $25, 356($29)
lw $20, 344($29)
la $5, a($20)
lw $5, 0($5)
lw $25, 356($29)
add $6, $29, $25
lw $6, 0($6)
div $7, $5, $6
sw $7, 336($29)
lw $8, 0($30)
div $9, $8, 30
sw $9, 372($29)
lw $9, 372($29)
mul $10, $9, 4
sw $10, 376($29)
lw $11, 0($30)
div $12, $11, 30
sw $12, 384($29)
lw $12, 384($29)
mul $12, $12, 30
sw $12, 384($29)
lw $13, 0($30)
lw $12, 384($29)
sub $14, $13, $12
sw $14, 380($29)
lw $14, 380($29)
mul $15, $14, 4
sw $15, 388($29)
lw $10, 376($29)
la $16, a($10)
lw $16, 0($16)
lw $15, 388($29)
add $17, $29, $15
lw $17, 0($17)
div $18, $16, $17
sw $18, 368($29)
lw $18, 368($29)
div $19, $18, 2
sw $19, 364($29)
lw $19, 364($29)
mul $19, $19, 2
sw $19, 364($29)
lw $7, 336($29)
lw $19, 364($29)
sub $20, $7, $19
sw $20, 360($29)
lw $20, 360($29)
li $21, 0
bne $20, $21, if_2_end
if_3_begin:
lw $22, 4($30)
li $23, 1
bne $22, $23, if_3_end
lw $24, 0($30)
div $25, $24, 30
sw $25, 396($29)
lw $25, 396($29)
mul $25, $25, 30
sw $25, 396($29)
lw $5, 0($30)
lw $25, 396($29)
sub $6, $5, $25
sw $6, 392($29)
lw $6, 392($29)
mul $7, $6, 4
sw $7, 400($29)
lw $7, 400($29)
add $8, $29, $7
lw $8, 0($8)
move $9, $8
sw $9, 128($29)
if_3_end:
if_2_end:
if_4_begin:
lw $10, 0($30)
div $11, $10, 30
sw $11, 408($29)
lw $11, 408($29)
mul $12, $11, 4
sw $12, 412($29)
lw $13, 0($30)
div $14, $13, 30
sw $14, 420($29)
lw $14, 420($29)
mul $14, $14, 30
sw $14, 420($29)
lw $15, 0($30)
lw $14, 420($29)
sub $16, $15, $14
sw $16, 416($29)
lw $16, 416($29)
mul $17, $16, 4
sw $17, 424($29)
lw $12, 412($29)
la $18, a($12)
lw $18, 0($18)
lw $17, 424($29)
add $19, $29, $17
lw $19, 0($19)
div $20, $18, $19
sw $20, 404($29)
lw $21, 0($30)
div $22, $21, 30
sw $22, 440($29)
lw $22, 440($29)
mul $23, $22, 4
sw $23, 444($29)
lw $24, 0($30)
div $25, $24, 30
sw $25, 452($29)
lw $25, 452($29)
mul $25, $25, 30
sw $25, 452($29)
lw $5, 0($30)
lw $25, 452($29)
sub $6, $5, $25
sw $6, 448($29)
lw $6, 448($29)
mul $7, $6, 4
sw $7, 456($29)
lw $23, 444($29)
la $8, a($23)
lw $8, 0($8)
lw $7, 456($29)
add $9, $29, $7
lw $9, 0($9)
div $10, $8, $9
sw $10, 436($29)
lw $10, 436($29)
div $11, $10, 2
sw $11, 432($29)
lw $11, 432($29)
mul $11, $11, 2
sw $11, 432($29)
lw $20, 404($29)
lw $11, 432($29)
sub $12, $20, $11
sw $12, 428($29)
lw $12, 428($29)
li $13, 1
bne $12, $13, if_4_end
if_5_begin:
lw $14, 4($30)
li $15, 0
bne $14, $15, if_5_end
lw $16, 0($30)
div $17, $16, 30
sw $17, 468($29)
lw $17, 468($29)
mul $17, $17, 30
sw $17, 468($29)
lw $18, 0($30)
lw $17, 468($29)
sub $19, $18, $17
sw $19, 464($29)
lw $19, 464($29)
mul $20, $19, 4
sw $20, 472($29)
lw $21, 128($29)
lw $20, 472($29)
add $22, $29, $20
lw $22, 0($22)
sub $23, $21, $22
sw $23, 460($29)
lw $23, 460($29)
move $24, $23
sw $24, 128($29)
if_5_end:
if_4_end:
if_1_end:
lw $25, 0($30)
div $5, $25, 30
sw $5, 476($29)
lw $5, 476($29)
mul $6, $5, 4
sw $6, 480($29)
lw $7, 0($30)
div $8, $7, 30
sw $8, 484($29)
lw $8, 484($29)
mul $9, $8, 4
sw $9, 488($29)
lw $9, 488($29)
la $10, a($9)
lw $10, 0($10)
lw $11, 128($29)
add $12, $10, $11
sw $12, 492($29)
lw $12, 492($29)
move $13, $12
lw $6, 480($29)
la $4, a($6)
sw $13, 0($4)
li $14, 0
move $2, $14
j func_set_end

func_set_end:
addi $29, $29, 496
lw $31, 0($29)
addi $29, $29, 4
lw $25, 0($29)
addi $29, $29, 4
lw $24, 0($29)
addi $29, $29, 4
lw $23, 0($29)
addi $29, $29, 4
lw $22, 0($29)
addi $29, $29, 4
lw $21, 0($29)
addi $29, $29, 4
lw $20, 0($29)
addi $29, $29, 4
lw $19, 0($29)
addi $29, $29, 4
lw $18, 0($29)
addi $29, $29, 4
lw $17, 0($29)
addi $29, $29, 4
lw $16, 0($29)
addi $29, $29, 4
lw $15, 0($29)
addi $29, $29, 4
lw $14, 0($29)
addi $29, $29, 4
lw $13, 0($29)
addi $29, $29, 4
lw $12, 0($29)
addi $29, $29, 4
lw $11, 0($29)
addi $29, $29, 4
lw $10, 0($29)
addi $29, $29, 4
lw $9, 0($29)
addi $29, $29, 4
lw $8, 0($29)
addi $29, $29, 4
lw $7, 0($29)
addi $29, $29, 4
lw $6, 0($29)
addi $29, $29, 4
lw $5, 0($29)
addi $29, $29, 4
jr $ra


func_rand_begin:
addi $29, $29, -4
sw $5, 0($29)
addi $29, $29, -4
sw $6, 0($29)
addi $29, $29, -4
sw $7, 0($29)
addi $29, $29, -4
sw $8, 0($29)
addi $29, $29, -4
sw $9, 0($29)
addi $29, $29, -4
sw $10, 0($29)
addi $29, $29, -4
sw $11, 0($29)
addi $29, $29, -4
sw $12, 0($29)
addi $29, $29, -4
sw $13, 0($29)
addi $29, $29, -4
sw $14, 0($29)
addi $29, $29, -4
sw $15, 0($29)
addi $29, $29, -4
sw $16, 0($29)
addi $29, $29, -4
sw $17, 0($29)
addi $29, $29, -4
sw $18, 0($29)
addi $29, $29, -4
sw $19, 0($29)
addi $29, $29, -4
sw $20, 0($29)
addi $29, $29, -4
sw $21, 0($29)
addi $29, $29, -4
sw $22, 0($29)
addi $29, $29, -4
sw $23, 0($29)
addi $29, $29, -4
sw $24, 0($29)
addi $29, $29, -4
sw $25, 0($29)
addi $29, $29, -4
sw $31, 0($29)
addi $29, $29, -40

li $5, 0
mul $6, $5, 4
sw $6, 4($29)
la $7, staticvalue
lw $7, 0($7)
lw $6, 4($29)
la $8, seed($6)
lw $8, 0($8)
mul $9, $7, $8
sw $9, 0($29)
li $10, 1
mul $11, $10, 4
sw $11, 12($29)
lw $9, 0($29)
lw $11, 12($29)
la $12, seed($11)
lw $12, 0($12)
add $13, $9, $12
sw $13, 8($29)
lw $13, 8($29)
move $14, $13
sw $14, staticvalue
li $15, 2
mul $16, $15, 4
sw $16, 24($29)
la $17, staticvalue
lw $17, 0($17)
lw $16, 24($29)
la $18, seed($16)
lw $18, 0($18)
div $19, $17, $18
sw $19, 20($29)
li $20, 2
mul $21, $20, 4
sw $21, 28($29)
lw $19, 20($29)
lw $21, 28($29)
la $22, seed($21)
lw $22, 0($22)
mul $19, $19, $22
sw $19, 20($29)
la $23, staticvalue
lw $23, 0($23)
lw $19, 20($29)
sub $24, $23, $19
sw $24, 16($29)
lw $24, 16($29)
move $25, $24
sw $25, staticvalue
if_6_begin:
la $5, staticvalue
lw $5, 0($5)
li $6, 0
bge $5, $6, if_6_end
li $7, 2
mul $8, $7, 4
sw $8, 32($29)
lw $8, 32($29)
la $9, seed($8)
lw $9, 0($9)
la $10, staticvalue
lw $10, 0($10)
add $11, $9, $10
sw $11, 36($29)
lw $11, 36($29)
move $12, $11
sw $12, staticvalue
if_6_end:
la $13, staticvalue
lw $13, 0($13)
move $2, $13
j func_rand_end

func_rand_end:
addi $29, $29, 40
lw $31, 0($29)
addi $29, $29, 4
lw $25, 0($29)
addi $29, $29, 4
lw $24, 0($29)
addi $29, $29, 4
lw $23, 0($29)
addi $29, $29, 4
lw $22, 0($29)
addi $29, $29, 4
lw $21, 0($29)
addi $29, $29, 4
lw $20, 0($29)
addi $29, $29, 4
lw $19, 0($29)
addi $29, $29, 4
lw $18, 0($29)
addi $29, $29, 4
lw $17, 0($29)
addi $29, $29, 4
lw $16, 0($29)
addi $29, $29, 4
lw $15, 0($29)
addi $29, $29, 4
lw $14, 0($29)
addi $29, $29, 4
lw $13, 0($29)
addi $29, $29, 4
lw $12, 0($29)
addi $29, $29, 4
lw $11, 0($29)
addi $29, $29, 4
lw $10, 0($29)
addi $29, $29, 4
lw $9, 0($29)
addi $29, $29, 4
lw $8, 0($29)
addi $29, $29, 4
lw $7, 0($29)
addi $29, $29, 4
lw $6, 0($29)
addi $29, $29, 4
lw $5, 0($29)
addi $29, $29, 4
jr $ra


func_main_begin:
addi $29, $29, -4
sw $31, 0($29)
addi $29, $29, -108

li $5, 0
sw $5, 16($29)
li $6, 0
sw $6, 20($29)
li $7, 0
sw $7, 24($29)
while_1_begin:
lw $8, 24($29)
li $9, 1000
bge $8, $9, while_1_end
lw $10, 24($29)
mul $11, $10, 4
sw $11, 28($29)
li $12, 0
move $13, $12
lw $11, 28($29)
la $4, a($11)
sw $13, 0($4)
lw $14, 24($29)
addi $15, $14, 1
sw $15, 32($29)
lw $15, 32($29)
move $16, $15
sw $16, 24($29)
j while_1_begin
while_1_end:
# function diao yong begin
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_myscanf_begin
lw $30, 0($29)
addi $29, $29, 4
move $17, $2
sw $17, 36($29)
lw $17, 36($29)
move $18, $17
sw $18, 0($29)
# function diao yong begin
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_myscanf_begin
lw $30, 0($29)
addi $29, $29, 4
move $19, $2
sw $19, 40($29)
lw $19, 40($29)
move $20, $19
sw $20, staticvalue
while_2_begin:
lw $21, 0($29)
li $22, 0
ble $21, $22, while_2_end
lw $23, 0($29)
subi $24, $23, 1
sw $24, 44($29)
lw $24, 44($29)
move $25, $24
sw $25, 0($29)
# function diao yong begin
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_rand_begin
lw $30, 0($29)
addi $29, $29, 4
move $5, $2
sw $5, 48($29)
lw $5, 48($29)
move $6, $5
sw $6, 12($29)
lw $7, 12($29)
div $8, $7, 300000
sw $8, 56($29)
lw $8, 56($29)
mul $8, $8, 300000
sw $8, 56($29)
lw $9, 12($29)
lw $8, 56($29)
sub $10, $9, $8
sw $10, 52($29)
lw $10, 52($29)
move $11, $10
sw $11, 4($29)
# function diao yong begin
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_rand_begin
lw $30, 0($29)
addi $29, $29, 4
move $12, $2
sw $12, 60($29)
lw $12, 60($29)
move $13, $12
sw $13, 12($29)
lw $14, 12($29)
div $15, $14, 2
sw $15, 68($29)
lw $15, 68($29)
mul $15, $15, 2
sw $15, 68($29)
lw $16, 12($29)
lw $15, 68($29)
sub $17, $16, $15
sw $17, 64($29)
lw $17, 64($29)
move $18, $17
sw $18, 8($29)
# function diao yong begin
lw $19, 8($29)
sw $19, -4($29)
lw $20, 4($29)
sw $20, -8($29)
addi $29, $29, -8
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_set_begin
lw $30, 0($29)
addi $29, $29, 12
move $21, $2
sw $21, 72($29)
j while_2_begin
while_2_end:
while_3_begin:
lw $22, 20($29)
li $23, 1000
bge $22, $23, while_3_end
lw $24, 20($29)
mul $25, $24, 4
sw $25, 80($29)
lw $5, 20($29)
mul $6, $5, 4
sw $6, 92($29)
lw $6, 92($29)
la $7, a($6)
lw $7, 0($7)
div $8, $7, 100000
sw $8, 88($29)
lw $8, 88($29)
mul $8, $8, 100000
sw $8, 88($29)
lw $25, 80($29)
la $9, a($25)
lw $9, 0($9)
lw $8, 88($29)
sub $10, $9, $8
sw $10, 84($29)
lw $11, 16($29)
lw $10, 84($29)
add $12, $11, $10
sw $12, 76($29)
lw $12, 76($29)
move $13, $12
sw $13, 16($29)
lw $14, 16($29)
div $15, $14, 100000
sw $15, 100($29)
lw $15, 100($29)
mul $15, $15, 100000
sw $15, 100($29)
lw $16, 16($29)
lw $15, 100($29)
sub $17, $16, $15
sw $17, 96($29)
lw $17, 96($29)
move $18, $17
sw $18, 16($29)
lw $19, 20($29)
addi $20, $19, 1
sw $20, 104($29)
lw $20, 104($29)
move $21, $20
sw $21, 20($29)
j while_3_begin
while_3_end:
# function diao yong begin
lw $22, 16($29)
sw $22, -4($29)
addi $29, $29, -4
sw $30, -4($29)
move $30, $29
addi $29, $29, -4
jal func_myprintf_begin
lw $30, 0($29)
addi $29, $29, 8
j func_main_end

func_main_end:
addi $29, $29, 108
lw $31, 0($29)
jr $ra

